{"version":3,"file":"webkit-polyfills.js","mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAyB,gBAAID,IAE7BD,EAAsB,gBAAIC,GAC3B,CATD,CASGK,MAAM,I,0BCTT,QAcqB,oBAAXC,OAAyBA,OAAyB,oBAATC,KAAuBA,KAAO,EAAAC,OAXvD,0BAAP,EAWsE,WACrF,aAEA,IAAIC,EACJ,IAEQA,EADkB,iBAAXH,QAAuBA,OAAOA,SAAWA,OAClCA,OACS,iBAATC,MAAqBA,KAAKA,OAASA,KACnCA,KACW,iBAAX,EAAAC,GAAuB,EAAAA,EAAOE,SAAW,EAAAF,EACzC,EAAAA,EAEA,CAAC,CAEvB,CAAE,MAAOG,GACLC,QAAQC,MAAM,kCAAmCF,EACrD,CAEA,IAAIG,EAAU,CAAC,EAGf,SACmC,IAApBL,EAAYM,MACnBN,EAAYM,IAAMN,EAAYO,UAC9BF,EAAQC,IAAMN,EAAYO,UAElC,CAAE,MAAOL,GACLC,QAAQC,MAAM,yBAA0BF,EAC5C,CAGA,SAC4C,IAA7BF,EAAYQ,eACnBR,EAAYQ,aAAeR,EAAYS,mBACvCJ,EAAQI,mBAAqBT,EAAYS,mBAEjD,CAAE,MAAOP,GACLC,QAAQC,MAAM,kCAAmCF,EACrD,CAGA,SACiD,IAAlCF,EAAYU,oBACnBV,EAAYU,kBAAoBV,EAAYW,wBAC5CN,EAAQM,wBAA0BX,EAAYW,wBAEtD,CAAE,MAAOT,GACLC,QAAQC,MAAM,uCAAwCF,EAC1D,CAGA,SACyC,IAA1BF,EAAYY,iBAC+B,IAAvCZ,EAAYY,UAAUC,mBAA2F,IAApDb,EAAYY,UAAUC,aAAaC,kBAC/C,IAA7Cd,EAAYY,UAAUG,qBAC7Bf,EAAYc,aAAed,EAAYY,UAAUG,mBACjDV,EAAQS,aAAed,EAAYY,UAAUG,qBAGjDf,EAAYc,aAAed,EAAYY,UAAUC,aAAaC,aAC9DT,EAAQS,aAAed,EAAYY,UAAUC,aAAaC,cAGtE,CAAE,MAAOZ,GACLC,QAAQC,MAAM,kCAAmCF,EACrD,CAGA,SACqD,IAAtCF,EAAYgB,wBACnBhB,EAAYgB,sBAAwBhB,EAAYiB,4BAChDZ,EAAQW,sBAAwBhB,EAAYiB,4BAEpD,CAAE,MAAOf,GACLC,QAAQC,MAAM,2CAA4CF,EAC9D,CAGA,SAC6C,IAA9BF,EAAYkB,qBACsB,IAA9BlB,EAAYmB,eACnBnB,EAAYkB,cAAgB,gBAC5Bb,EAAQa,cAAgB,kBAExBlB,EAAYkB,cAAgB,sBAC5Bb,EAAQa,cAAgB,uBAGpC,CAAE,MAAOhB,GACLC,QAAQC,MAAM,mCAAoCF,EACtD,CAGA,SACgD,IAAjCF,EAAYoB,mBACnBpB,EAAYoB,iBAAmBpB,EAAYqB,wBAA0B,EACrEhB,EAAQe,iBAAmBpB,EAAYqB,wBAA0B,EAEzE,CAAE,MAAOnB,GACLC,QAAQC,MAAM,sCAAuCF,EACzD,CAGA,SACyC,IAA1BF,EAAYsB,gBACiB,IAAzBtB,EAAYuB,gBACsC,IAA9CvB,EAAYuB,SAASC,KAAKC,MAAMH,WACvCtB,EAAYsB,UAAY,YACxBjB,EAAQiB,UAAY,cAEpBtB,EAAYsB,UAAY,kBACxBjB,EAAQiB,UAAY,mBAIpC,CAAE,MAAOpB,GACLC,QAAQC,MAAM,+BAAgCF,EAClD,CAGA,SACkD,IAAnCF,EAAY0B,yBACiB,IAAzB1B,EAAYuB,gBAC+C,IAAvDvB,EAAYuB,SAASC,KAAKC,MAAMC,oBACvC1B,EAAY0B,mBAAqB,qBACjCrB,EAAQqB,mBAAqB,uBAE7B1B,EAAY0B,mBAAqB,2BACjCrB,EAAQqB,mBAAqB,4BAI7C,CAAE,MAAOxB,GACLC,QAAQC,MAAM,wCAAyCF,EAC3D,CAGA,SACiD,IAAlCF,EAAY2B,wBACiB,IAAzB3B,EAAYuB,gBAEsB,KADrCK,EAAU5B,EAAYuB,SAASM,iBAChBC,mBACf9B,EAAY2B,kBAAoBC,EAAQE,kBACxCzB,EAAQsB,kBAAoBC,EAAQE,wBACc,IAApCF,EAAQG,0BACtB/B,EAAY2B,kBAAoBC,EAAQG,wBACxC1B,EAAQsB,kBAAoBC,EAAQG,yBAIpD,CAAE,MAAO7B,GACLC,QAAQC,MAAM,uCAAwCF,EAC1D,CAGA,SAC8C,IAA/BF,EAAYgC,iBACnBhC,EAAYgC,eAAiBhC,EAAYiC,aACzC5B,EAAQ2B,eAAiBhC,EAAYiC,aAE7C,CAAE,MAAO/B,GACLC,QAAQC,MAAM,oCAAqCF,EACvD,CAGA,SAC0C,IAA3BF,EAAYkC,iBACiB,IAAzBlC,EAAYuB,gBACuC,IAA/CvB,EAAYuB,SAASC,KAAKC,MAAMS,YACvClC,EAAYkC,WAAa,cACzB7B,EAAQ6B,WAAa,gBAErBlC,EAAYkC,WAAa,mBACzB7B,EAAQ6B,WAAa,oBAIrC,CAAE,MAAOhC,GACLC,QAAQC,MAAM,gCAAiCF,EACnD,CAGA,SACiD,IAAlCF,EAAYmC,oBACnBnC,EAAYmC,kBAAoBnC,EAAYoC,wBAC5C/B,EAAQ8B,kBAAoBnC,EAAYoC,wBAEhD,CAAE,MAAOlC,GACLC,QAAQC,MAAM,uCAAwCF,EAC1D,CAGA,IAGY,IAAI0B,OAFiC,IAAlC5B,EAAY8B,wBACiB,IAAzB9B,EAAYuB,gBAEsB,KADrCK,EAAU5B,EAAYuB,SAASM,iBAChBC,mBACf9B,EAAY8B,kBAAoBF,EAAQE,kBACxCzB,EAAQyB,kBAAoBF,EAAQE,wBACc,IAApCF,EAAQG,0BACtB/B,EAAY8B,kBAAoBF,EAAQG,wBACxC1B,EAAQyB,kBAAoBF,EAAQG,yBAIpD,CAAE,MAAO7B,GACLC,QAAQC,MAAM,uCAAwCF,EAC1D,CAKA,OAHAF,EAAYK,QAAUA,EAGfA,CACX,GAhO0B,UAAX,IAAW,iB,GCFtBgC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAahD,QAGrB,IAAIC,EAAS4C,EAAyBE,GAAY,CAGjD/C,QAAS,CAAC,GAOX,OAHAkD,EAAoBH,GAAU9C,EAAQA,EAAOD,QAAS8C,GAG/C7C,EAAOD,OACf,C,OCtBA8C,EAAoBvC,EAAI,WACvB,GAA0B,iBAAf4C,WAAyB,OAAOA,WAC3C,IACC,OAAO/C,MAAQ,IAAIgD,SAAS,cAAb,EAChB,CAAE,MAAO1C,GACR,GAAsB,iBAAXL,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCGEyC,EAAoB,G","sources":["webpack://PolyfillLibrary/webpack/universalModuleDefinition","webpack://PolyfillLibrary/./src/index.js","webpack://PolyfillLibrary/webpack/bootstrap","webpack://PolyfillLibrary/webpack/runtime/global","webpack://PolyfillLibrary/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"PolyfillLibrary\"] = factory();\n\telse\n\t\troot[\"PolyfillLibrary\"] = factory();\n})(this, () => {\nreturn ","(function (global, factory) {\r\n    if (typeof define === \"function\" && define.amd) {\r\n        // AMD (Asynchronous Module Definition)\r\n        define([], factory);\r\n    } else if (typeof exports === \"object\" && typeof module !== \"undefined\") {\r\n        // CommonJS (Node.js and other environments supporting require/export)\r\n        module.exports = factory();\r\n    } else if (typeof exports === \"object\") {\r\n        // CommonJS without `module` (e.g., ES modules in Node.js)\r\n        exports.PolyfillLibrary = factory();\r\n    } else {\r\n        // Global context (browser or web worker environment)\r\n        global.PolyfillLibrary = factory();\r\n    }\r\n})(typeof window !== \"undefined\" ? window : typeof self !== \"undefined\" ? self : global, function runner() {\r\n    \"use strict\";\r\n\r\n    var globalScope; // Determine the global scope (window, self, global)\r\n    try {\r\n        if (typeof window === 'object' && window.window === window) {\r\n            globalScope = window; // Browser environment\r\n        } else if (typeof self === 'object' && self.self === self) {\r\n            globalScope = self; // Web Worker environment\r\n        } else if (typeof global === 'object' && global.global === global) {\r\n            globalScope = global; // Node.js or other global scope\r\n        } else {\r\n            globalScope = {}; // Fallback if no global scope is found\r\n        }\r\n    } catch (e) {\r\n        console.error(\"Error determining global scope:\", e);\r\n    }\r\n\r\n    var webKits = {}; // Store polyfilled values for reference\r\n\r\n    // Polyfill for URL and webkitURL\r\n    try {\r\n        if (typeof globalScope.URL === 'undefined') {\r\n            globalScope.URL = globalScope.webkitURL;\r\n            webKits.URL = globalScope.webkitURL;\r\n        }\r\n    } catch (e) {\r\n        console.error(\"Error polyfilling URL:\", e);\r\n    }\r\n\r\n    // Polyfill for AudioContext\r\n    try {\r\n        if (typeof globalScope.AudioContext === 'undefined') {\r\n            globalScope.AudioContext = globalScope.webkitAudioContext;\r\n            webKits.webkitAudioContext = globalScope.webkitAudioContext;\r\n        }\r\n    } catch (e) {\r\n        console.error(\"Error polyfilling AudioContext:\", e);\r\n    }\r\n\r\n    // Polyfill for SpeechRecognition\r\n    try {\r\n        if (typeof globalScope.SpeechRecognition === 'undefined') {\r\n            globalScope.SpeechRecognition = globalScope.webkitSpeechRecognition;\r\n            webKits.webkitSpeechRecognition = globalScope.webkitSpeechRecognition;\r\n        }\r\n    } catch (e) {\r\n        console.error(\"Error polyfilling SpeechRecognition:\", e);\r\n    }\r\n\r\n    // Polyfill for getUserMedia\r\n    try {\r\n        if (typeof globalScope.navigator !== \"undefined\") {\r\n            if (typeof globalScope.navigator.mediaDevices === 'undefined' || typeof globalScope.navigator.mediaDevices.getUserMedia === 'undefined') {\r\n                if (typeof globalScope.navigator.webkitGetUserMedia !== 'undefined') {\r\n                    globalScope.getUserMedia = globalScope.navigator.webkitGetUserMedia;\r\n                    webKits.getUserMedia = globalScope.navigator.webkitGetUserMedia;\r\n                }\r\n            } else {\r\n                globalScope.getUserMedia = globalScope.navigator.mediaDevices.getUserMedia;\r\n                webKits.getUserMedia = globalScope.navigator.mediaDevices.getUserMedia;\r\n            }\r\n        }\r\n    } catch (e) {\r\n        console.error(\"Error polyfilling getUserMedia:\", e);\r\n    }\r\n\r\n    // Polyfill for requestAnimationFrame\r\n    try {\r\n        if (typeof globalScope.requestAnimationFrame === 'undefined') {\r\n            globalScope.requestAnimationFrame = globalScope.webkitRequestAnimationFrame;\r\n            webKits.requestAnimationFrame = globalScope.webkitRequestAnimationFrame;\r\n        }\r\n    } catch (e) {\r\n        console.error(\"Error polyfilling requestAnimationFrame:\", e);\r\n    }\r\n\r\n    // Polyfill for webkitTransitionEnd event\r\n    try {\r\n        if (typeof globalScope.transitionEnd === 'undefined') {\r\n            if (typeof globalScope.transitionend !== 'undefined') {\r\n                globalScope.transitionEnd = 'transitionend';\r\n                webKits.transitionEnd = 'transitionend';\r\n            } else {\r\n                globalScope.transitionEnd = 'webkitTransitionEnd';\r\n                webKits.transitionEnd = 'webkitTransitionEnd';\r\n            }\r\n        }\r\n    } catch (e) {\r\n        console.error(\"Error polyfilling transitionEnd:\", e);\r\n    }\r\n\r\n    // Polyfill for webkitDevicePixelRatio\r\n    try {\r\n        if (typeof globalScope.devicePixelRatio === 'undefined') {\r\n            globalScope.devicePixelRatio = globalScope.webkitDevicePixelRatio || 1;\r\n            webKits.devicePixelRatio = globalScope.webkitDevicePixelRatio || 1;\r\n        }\r\n    } catch (e) {\r\n        console.error(\"Error polyfilling devicePixelRatio:\", e);\r\n    }\r\n\r\n    // Polyfill for webkitTransform (CSS property)\r\n    try {\r\n        if (typeof globalScope.transform === 'undefined') {\r\n            if (typeof globalScope.document !== 'undefined') {\r\n                if (typeof globalScope.document.body.style.transform !== 'undefined') {\r\n                    globalScope.transform = 'transform';\r\n                    webKits.transform = 'transform';\r\n                } else {\r\n                    globalScope.transform = 'webkitTransform';\r\n                    webKits.transform = 'webkitTransform';\r\n                }\r\n            }\r\n        }\r\n    } catch (e) {\r\n        console.error(\"Error polyfilling transform:\", e);\r\n    }\r\n\r\n    // Polyfill for webkitBackfaceVisibility (CSS property)\r\n    try {\r\n        if (typeof globalScope.backfaceVisibility === 'undefined') {\r\n            if (typeof globalScope.document !== 'undefined') {\r\n                if (typeof globalScope.document.body.style.backfaceVisibility !== 'undefined') {\r\n                    globalScope.backfaceVisibility = 'backfaceVisibility';\r\n                    webKits.backfaceVisibility = 'backfaceVisibility';\r\n                } else {\r\n                    globalScope.backfaceVisibility = 'webkitBackfaceVisibility';\r\n                    webKits.backfaceVisibility = 'webkitBackfaceVisibility';\r\n                }\r\n            }\r\n        }\r\n    } catch (e) {\r\n        console.error(\"Error polyfilling backfaceVisibility:\", e);\r\n    }\r\n\r\n    // Polyfill for webkitRequestFullScreen\r\n    try {\r\n        if (typeof globalScope.requestFullScreen === 'undefined') {\r\n            if (typeof globalScope.document !== 'undefined') {\r\n                var element = globalScope.document.documentElement; // Only check in browser environments\r\n                if (typeof element.requestFullscreen !== 'undefined') {\r\n                    globalScope.requestFullScreen = element.requestFullscreen;\r\n                    webKits.requestFullScreen = element.requestFullscreen;\r\n                } else if (typeof element.webkitRequestFullscreen !== 'undefined') {\r\n                    globalScope.requestFullScreen = element.webkitRequestFullscreen;\r\n                    webKits.requestFullScreen = element.webkitRequestFullscreen;\r\n                }\r\n            }\r\n        }\r\n    } catch (e) {\r\n        console.error(\"Error polyfilling requestFullScreen:\", e);\r\n    }\r\n\r\n    // Polyfill for webkitDatabase (deprecated)\r\n    try {\r\n        if (typeof globalScope.webkitDatabase === 'undefined') {\r\n            globalScope.webkitDatabase = globalScope.openDatabase;\r\n            webKits.webkitDatabase = globalScope.openDatabase;\r\n        }\r\n    } catch (e) {\r\n        console.error(\"Error polyfilling webkitDatabase:\", e);\r\n    }\r\n\r\n    // Polyfill for webkitWillChange (CSS property)\r\n    try {\r\n        if (typeof globalScope.willChange === 'undefined') {\r\n            if (typeof globalScope.document !== 'undefined') {\r\n                if (typeof globalScope.document.body.style.willChange !== 'undefined') {\r\n                    globalScope.willChange = 'will-change';\r\n                    webKits.willChange = 'will-change';\r\n                } else {\r\n                    globalScope.willChange = 'webkitWillChange';\r\n                    webKits.willChange = 'webkitWillChange';\r\n                }\r\n            }\r\n        }\r\n    } catch (e) {\r\n        console.error(\"Error polyfilling willChange:\", e);\r\n    }\r\n\r\n    // Polyfill for webkitRequestFileSystem\r\n    try {\r\n        if (typeof globalScope.requestFileSystem === 'undefined') {\r\n            globalScope.requestFileSystem = globalScope.webkitRequestFileSystem;\r\n            webKits.requestFileSystem = globalScope.webkitRequestFileSystem;\r\n        }\r\n    } catch (e) {\r\n        console.error(\"Error polyfilling requestFileSystem:\", e);\r\n    }\r\n\r\n    // Polyfill for requestFullscreen\r\n    try {\r\n        if (typeof globalScope.requestFullscreen === 'undefined') {\r\n            if (typeof globalScope.document !== 'undefined') {\r\n                var element = globalScope.document.documentElement; // Only check in browser environments\r\n                if (typeof element.requestFullscreen !== 'undefined') {\r\n                    globalScope.requestFullscreen = element.requestFullscreen;\r\n                    webKits.requestFullscreen = element.requestFullscreen;\r\n                } else if (typeof element.webkitRequestFullscreen !== 'undefined') {\r\n                    globalScope.requestFullscreen = element.webkitRequestFullscreen;\r\n                    webKits.requestFullscreen = element.webkitRequestFullscreen;\r\n                }\r\n            }\r\n        }\r\n    } catch (e) {\r\n        console.error(\"Error polyfilling requestFullscreen:\", e);\r\n    }\r\n\r\n    globalScope.webKits = webKits;\r\n\r\n    // Return the polyfilled library and webKits object\r\n    return webKits;\r\n});","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","// startup\n// Load entry module and return exports\n// This entry module used 'module' so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(44);\n"],"names":["root","factory","exports","module","define","amd","this","window","self","g","globalScope","global","e","console","error","webKits","URL","webkitURL","AudioContext","webkitAudioContext","SpeechRecognition","webkitSpeechRecognition","navigator","mediaDevices","getUserMedia","webkitGetUserMedia","requestAnimationFrame","webkitRequestAnimationFrame","transitionEnd","transitionend","devicePixelRatio","webkitDevicePixelRatio","transform","document","body","style","backfaceVisibility","requestFullScreen","element","documentElement","requestFullscreen","webkitRequestFullscreen","webkitDatabase","openDatabase","willChange","requestFileSystem","webkitRequestFileSystem","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","globalThis","Function"],"sourceRoot":""}